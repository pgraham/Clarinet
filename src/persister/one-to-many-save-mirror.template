// -------------------------------------------------------------------
// Create/save ${rhs}s
$persister = ActorFactory::getActor('persister', '${rhs}');
$related = $model->get${lhs_property}();
if ($related === null) {
  $related = array();
}

// Create id indexed array of related entities for use when determining
// if there are any orphans
$idMap = Array();
foreach ($related AS $rel) {
  if ($rel->get${rhs_id_property}() !== null) {
    $idMap[$rel->get${rhs_id_property}()] = $rel;
  }
}

// Update the right hand side entities to be associated with the
// given left hand side entity
foreach ($related AS $rel) {
  $rel->set${rhs_property}($model);
}

// Update any orphans
// TODO This doesn't need to happen in the create method
$c = new Criteria();
$c->addEquals('${rhs_column}', $id);
$current = $persister->retrieve($c);
foreach ($current AS $cur) {
  if (!isset($idMap[$cur->get${rhs_id_property}()])) {
    ${if:deleteOrphan}
      $persister->delete($cur);
    ${else}
      $cur->set${rhs_property}(null);
      $persister->update($cur);
    ${fi}
  }
}

// Update or save the collection
foreach ($related AS $rel) {
  $relId = $rel->get${rhs_id_property}();
  if ($relId === null) {
    $persister->create($rel);
  } else if ($relId !== self::CREATE_MARKER) {
    $persister->update($rel);
  }
}
// -------------------------------------------------------------------
