<?php
namespace clarinet\persister;

use \PDO;
use \PDOException;

use \clarinet\Clarinet;
use \clarinet\Criteria;
use \clarinet\Exception;

/**
 * This is a persister class generated by Clarinet.  Do NOT modify this file.
 * Instead, modify the model class of this persister, then run the clarinet
 * generator to re-generate this file.
 */
class ${persisterName} {

  private $_cache = Array();

  private $_pdo = null;

  private $_create = null;
  private $_update = null;
  private $_delete = null;


  public function __construct() {
    $this->_pdo = Clarinet::$pdo;

    $this->_create = $this->_pdo->prepare(
      "INSERT INTO ${table} (${column_names}) VALUES (${value_names})");

    $this->_update = $this->_pdo->prepare(
      "UPDATE ${table} SET ${sql_setters} WHERE ${id_column} = :id");

    $this->_delete = $this->_pdo->prepare(
      "DELETE FROM ${table} WHERE ${id_column} = :id");
  }

  public function getById($id) {
    if (!isset($this->_cache[$id])) {
      $c = new Criteria();
      $c->addEquals('${id_column}', $id);

      // We don't care about the result since the retrieve method will
      // populate the cache
      $this->retrieve($c);
      
      if (!isset($this->_cache[$id])) {
        throw new Exception("No ${class} exists with id $id");
      }
    }
    return $this->_cache[$id];
  }

${create}
${retrieve}
${update}
${delete}
}
