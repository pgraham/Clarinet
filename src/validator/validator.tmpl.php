<?php
namespace clarinet\validator;

use \clarinet\Exception;

/**
 * This is a validator actor generated by Clarinet.
 *
 * DO NOT modify this file.  Instead, modify the model class of this validator,
 * then run the Clarinet generator to re-generate this file.
 */
class ${actor} {

  public function validate(\${class} $model, &$e = false) {

    $msgs = array();
    ${each:properties as prop}
      $msg = $this->_check${prop[name]}($model->get${prop[name]}());
      if ($msg !== null) {
        $msgs[] = $msg;
      }
    ${done}

    if (count($msgs) > 0) {
      $ex = new ValidationException($msgs);
      if ($e !== false) {
        $e = $ex;
      } else {
        throw $ex;
      }
      return false;
    }
    return true;
  }

  ${each:properties as prop}
    private function _check${prop[name]}($val) {
      ${if:prop[values] ISSET}
        $accepted = array("${join:prop[values]:","}");
        if (!in_array($val, $accepted)) {
          return "$val is not an accepted value for ${prop[name]}. Accepted values are: ${join:prop[values]:,}";
        }
      ${fi}

      // No validation errors
      return null;
    }
  ${done}

}
